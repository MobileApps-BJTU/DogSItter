<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 24">

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private CharityFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\CharityFragment.java"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private ColorFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\ColorFragment.java"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private DrawingFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\DrawingFragment.java"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private GainFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\GainFragment.java"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private MainFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\MainFragment.java"
            line="51"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private MonthFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\MonthFragment.java"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private ShowFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\ShowFragment.java"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private StepsFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\StepsFragment.java"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private StepsPerDayFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\StepsPerDayFragment.java"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private TotalFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\TotalFragment.java"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private VarietyFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\VarietyFragment.java"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="The default constructor must be public"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private WeekFragment() {"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="F:\new\OnTheRoad\OnTheRoad\app\src\main\java\com\example\ontheroad\WeekFragment.java"
            line="48"
            column="13"/>
    </issue>

</issues>
